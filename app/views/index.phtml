<!doctype html>
<html>
<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1">

	<?php use MSpace\Model\Notifications;

	$this->assets->outputCss() ?>

	<title>MSpace</title>
</head>

<script type="text/javascript">
	var MSpace = {
		currentUser: {
			id				:	<?php echo $currentUser['id'] ?>,
			username		:	'<?php echo  $currentUser['username'] ?>'
		},
		websocketAddress:	'<?php echo RATCHET_SERVER_ADRESS ?>',
		constants: {
			NOTIFICATION_NEW_MESSAGE: <?php echo Notifications::TYPE_NEW_MESSAGE ?>,
			NOTIFICATION_UPDATED: <?php echo Notifications::TYPE_NOTIFICATIONS_CHANGED ?>
		}
	};
</script>

<body>

<div id="chat-window-containter" class="chat-containerbar-bottom">
	<div id="chat-people-overview" class="panel panel-default chat-conversation-window chat-conversation-window-open">
		<div class="panel-heading chat-conversation-window-headline" id="chat-people-overview-headline">Chat</div>
		<div class="panel-body chat-conversation-window-message-containter chat-people-list">
			<ul id="chat-people-list" class="nav nav-pills nav-stacked">
			</ul>
		</div>
	</div>
</div>

<nav class="navbar navbar-default navbar-static-top MSpace-nav-top">
	<div class="container-fluid">
		<div class="col-md-2"></div><div class="col-md-4"><div class="navbar-header navbar-brand navbar-left">
				<a href="/"></a>
			</div><div class="navbar-header navbar-left">
				<a href="/" class="navbar-brand">MSpace</a>
			</div><form class="navbar-header navbar-form " role="search">
				<div class="form-group">
					<input id="general-searchbar" type="text" class="form-control typeahead navbar-left" placeholder="Search">
				</div>
			</form></div>

		<div class="col-md-2" href="#"><div class="navbar-header navbar-left">
				<a class="navbar-brand"><?php echo $currentUser['username'] ?></a>
			</div><div class="navbar-header navbar-right">
				<button class="btn btn-default navbar-btn"><span class="glyphicon glyphicon-envelope"></span></button>
				<button class="btn btn-default navbar-btn"><span class="glyphicon glyphicon-time"></span></button>

				<div class="btn-group">
					<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
						<span class="glyphicon glyphicon-off">&nbsp;</span><span class="caret"></span>
					</button>
					<ul class="dropdown-menu">
						<?php $admins = [1,2,6,5,7] ?>
						<?php if( in_array($currentUser['id'], $admins) ) { ?>
									<li><a href="/users/admin">Admin</a></li>
						<?php } ?>
						<li><a href="/session/logout">Logout</a></li>
					</ul>
				</div>
			</div></div>


	</div>
</nav>

<div class="container-fluid" style="padding-top:100px ">
	<div class="col-md-2"></div>
	<div class="col-md-1">
		<ul class="list-group">
			<li class="list-group-item"><span class="glyphicon glyphicon-globe"></span>&nbsp;News</li>
			<li class="list-group-item"><span class="glyphicon glyphicon-calendar"></span>&nbsp;Events</li>
			<li class="list-group-item"><span class="glyphicon glyphicon-asterisk"></span><a href="/users/music">&nbsp;Other</a></li>
		</ul>
	</div>

	<div class="col-md-4">

		<?php echo $this->getContent() ?>

	</div>
</div>

<?php $this->assets->outputJs() ?>

<script type="text/javascript">
	/** globals */
	var mspaceChat;
	var MSpaceConnector;
	var connection;

	$(document).ready(function() {
		mspaceChat = new mspaceChat();
		mspaceChat.updateConversationsBox();

		/** get open chat windows */
		 $.getJSON('/conversations/get_open_conversation_windows', function (response) {
			 for(var i in response) {
				 var conversation = response[i];
				 mspaceChat.openConversationWindow(conversation.conversation_id, conversation.title, false);
			 }
		});

		var preProcessed = [];
		var input = $('.typeahead');

		input.typeahead({
			source: function (query, process) {
				return $.getJSON('/users/list_all', function (response) {
					var preProcessed = [];

					for(var i in response.data) {
						var element = response.data[i]

						preProcessed.push({
							id: element.id,
							name: element.username
						})
					}

					return process(preProcessed);
				});
			},
			updater:function (item) {
				/** open chat window for user */
				mspaceChat.openConversationWindowByUser(item.id);

				return item;
			}
		});

	});

	function clearNotifications(conversationId) {
		$.getJSON( "/conversations/clear_notifications/" + conversationId, function( response ) {
			if(response == true) {
				$('#notification-for-conversation-' + conversationId).text('');
			}
		});

		mspaceChat.updateConversationsBox()
	}

	var updateUserMenuNotifications = function() {
		$.getJSON( "/users/get_notifications/" , function( notifications ) {
			var totalNotifications;
			var totalUpdatedConversations = 0;
			$.each( notifications, function(index, notification) {
				if( notification.type == <?= Notifications::TYPE_NEW_MESSAGE ?> ) {
					totalUpdatedConversations++;
				}
			});
			/**
			 * only got these atm
			 * @type {number}
			 */
			totalNotifications = totalUpdatedConversations;
			$("#profile-notification-count").text( totalNotifications > 0 ? totalNotifications : '' );
			$("#profile-conversation-notification-count").text(totalUpdatedConversations > 0 ? totalUpdatedConversations : '');
			/**
			 */
			var title;
			if(totalNotifications > 0) {
				title  = '(' + totalNotifications + ') MSpaceConnector';
			}
			else {
				title = 'MSpaceConnector';
			}
			$(document).prop('title', title);
		});
	};

	$(document).ready( function() {
		MSpaceConnector = new MSpaceConnector();

		/** enable this for autobahn-debugging */
		//ab.debug(true, true);
		connection = new ab.Session(MSpace.websocketAddress,
			function() {
				connection.subscribe(MSpace.currentUser.id + '', function(topic, data) {
					MSpaceConnector.receive(data);
					console.log('New article published to category "' + topic + '" : ' + data);
				});
				console.log('Connected to the big MSpaceConnector...');
			},
			function(something) {
				console.warn('WebSocket connection closed');
			},
			{'skipSubprotocolCheck': true}
		);

		updateUserMenuNotifications();
		/**
		 * @TODO make register take an array instead or both?
		 **/
		MSpaceConnector.register(MSpace.constants.NOTIFICATION_UPDATED , function() {
			updateUserMenuNotifications();
			mspaceChat.updateConversationsBox();
		});

		MSpaceConnector.register(MSpace.constants.NOTIFICATION_NEW_MESSAGE , function(message) {
			updateUserMenuNotifications();

			mspaceChat.updateConversationsBox();
			mspaceChat.updateChatBox(message.data.conversation_id);
		});
	});
</script>

</body>
</html>
