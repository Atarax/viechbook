<!doctype html>
<html>
<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1">

	<?php use Viechbook\Model\Notifications;

	$this->assets->outputCss() ?>

	<title>Viechbook</title>
</head>

<body>

<div id="chat-conversation-window-dummy" class="panel panel-default chat-conversation-window" style="display: none;">
	<div class="glyphicon glyphicon-remove-sign chat-conversation-window-close-button"></div>
	<div class="panel-heading chat-conversation-window-headline">
	</div>
	<div class="panel-body chat-conversation-window-message-containter">
	</div>
	<div class="chat-conversation-window-breadcrumb"></div>
	<div class="chat-conversation-window-bottom-bar">
		<textarea class="chat-dummy-textarea chat-message-editor-textarea"></textarea>
	</div>
</div>

<div id="chat-window-containter" class="chat-containerbar-bottom">
</div>

<nav class="navbar navbar-default navbar-static-top viechbook-nav-top">
	<div class="container-fluid">
		<div class="navbar-header navbar-brand navbar-left" href="#">
			<img style="max-width:100%; max-height:100%;" alt="Brand" src="/img/soundviech.jpg">
		</div>

		<div class="navbar-header navbar-left">
			<a class="navbar-brand">Viechbook</a>
		</div>

		<form class="navbar-header navbar-form " role="search">
			<div class="form-group">
				<input id="general-searchbar" type="text" class="form-control typeahead navbar-left" placeholder="Search">
			</div>
		</form>

		<div class="navbar-header navbar-left">
			<a class="navbar-brand"><?php echo $currentUser['username'] ?></a>
		</div>
		<!-- <p class="navbar-text">The Mission Is The Message Is Sound</p> -->

		<div class="navbar-header navbar-right">
			<button class="btn btn-default navbar-btn"><span class="glyphicon glyphicon-envelope"></span></button>
			<button class="btn btn-default navbar-btn"><span class="glyphicon glyphicon-time"></span></button>

			<div class="btn-group">
				<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
					<span class="glyphicon glyphicon-off">&nbsp;<span class="caret"></span>
				</button>
				<ul class="dropdown-menu">
					<li><a href="/session/logout">Logout</a></li>
				</ul>
			</div>
		</div>
	</div>
</nav>

<div class="container chat-people">
	<ul id="chat-people-list" class="nav nav-pills nav-stacked">
		<li role="presentation"><a href="#">User1</a></li>
		<li role="presentation"><a href="#">User2</a></li>
		<li role="presentation"><a href="#">User3</a></li>
		<li role="presentation"><a href="#">User3</a></li>
		<li role="presentation"><a href="#">User3</a></li>
		<li role="presentation"><a href="#">User3</a></li>
		<li role="presentation"><a href="#">User3</a></li>
	</ul>
</div>

<div class="container-fluid" style="padding-top:100px ">
	<div class="col-md-2">
		<ul class="list-group">
			<li class="list-group-item"><span class="glyphicon glyphicon-globe"></span>&nbsp;News</li>
			<li class="list-group-item"><span class="glyphicon glyphicon-calendar"></span>&nbsp;Events</li>
			<li class="list-group-item"><span class="glyphicon glyphicon-asterisk"></span>&nbsp;Other</li>
		</ul>
	</div>

	<div class="col-md-8">

		<?php echo $this->getContent() ?>

		<div class="panel panel-default">
			<div class="panel-heading">
				<h4>Hello, world!</h4>
			</div>
			<div class="panel-body">
				Hier entsteht das neue Viechbook.
				Fuck you Facebook!
			</div>
		</div>

		<div class="panel panel-default">
			<div class="panel-heading">
				<h4>Lorem ipsum</h4>
			</div>
			<div class="panel-body">
				Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.
			</div>
		</div>

	</div>
</div>

<?php $this->assets->outputJs() ?>

<script type="text/javascript">
	$(document).ready(function() {

		/** get open chat windows */
		 $.getJSON('/conversations/get_open_conversation_windows', function (response) {
			 for(var i in response) {
				 var conversation = response[i];
				 openConversationWindow(conversation.conversation_id, conversation.title, false);
			 }
		});

		//new WebSocket("<?php echo RATCHET_SERVER_ADRESS; ?>", "one");
		//openConversationWindow(1, 'Alpha-Viech');

		var preProcessed = [];
		var input = $('.typeahead');

		input.typeahead({
			source: function (query, process) {
				return $.getJSON('/users/list_all', function (response) {
					var preProcessed = [];

					for(var i in response.data) {
						var element = response.data[i]

						preProcessed.push({
							id: element.id,
							name: element.username
						})
					}

					return process(preProcessed);
				});
			},
			updater:function (item) {
				/** open chat window for user */
				openConversationWindowByUser(item.id);

				return item;
			}
		});

	});
</script>

<script type="text/javascript">
	var updateUserMenuNotifications = function() {
		$.getJSON( "/users/get_notifications/" , function( notifications ) {
			var totalNotifications;
			var totalUpdatedConversations = 0;
			$.each( notifications, function(index, notification) {
				if( notification.type == <?= Notifications::TYPE_NEW_MESSAGE ?> ) {
					totalUpdatedConversations++;
				}
			});
			/**
			 * only got these atm
			 * @type {number}
			 */
			totalNotifications = totalUpdatedConversations;
			$("#profile-notification-count").text( totalNotifications > 0 ? totalNotifications : '' );
			$("#profile-conversation-notification-count").text(totalUpdatedConversations > 0 ? totalUpdatedConversations : '');
			/**
			 */
			var title;
			if(totalNotifications > 0) {
				title  = '(' + totalNotifications + ') Viechbook';
			}
			else {
				title = 'Viechbook';
			}
			$(document).prop('title', title);
		});
	};
	var theViech = function() {
		var registrations = [];
		this.register = function(type, callback) {
			registrations.push( {type: type, callback: callback} );
		};
		this.receive = function(message) {
			$.each(registrations, function (index, registration) {
				if( registration.type == message.type ) {
					registration.callback(message);
				}
			});
		};
	};
	var viech;
	var connection;
	$(document).ready( function() {
		viech = new theViech();
		connection = new ab.Session('<?php echo RATCHET_SERVER_ADRESS; ?>',
			function() {
				connection.subscribe('<?= $currentUser['id'] ?>', function(topic, data) {
					viech.receive(data);
					console.log('New article published to category "' + topic + '" : ' + data);
				});
				console.log('Connected to the big viech...');
			},
			function() {
				console.warn('WebSocket connection closed');
			},
			{'skipSubprotocolCheck': true}
		);
		updateUserMenuNotifications();
		/**
		 * @TODO make register take an array instead or both?
		 **/
		viech.register(<?= Notifications::TYPE_NOTIFICATION_CHANGED ?> , function() {
			updateUserMenuNotifications();
		});
		viech.register(<?= Notifications::TYPE_NEW_MESSAGE ?> , function() {
			updateUserMenuNotifications();
		});
	});
</script>

<script type="text/javascript">
	$(document).ready( function() {
		updateConversationsBox();
		viech.register(<?php echo  Viechbook\Model\Notifications::TYPE_NEW_MESSAGE ?>, function() {
			updateConversationsBox();
		})
		viech.register(<?php echo  Viechbook\Model\Notifications::TYPE_NEW_MESSAGE ?>, function(message) {
			if(currentConversationId != null) {
				updateChatBox(currentConversationId);
			}
		})
	});

	function openConversationWindowByUser(userId) {
		$.getJSON( "/conversations/get_or_create_by_user/" + userId, function( response ) {
			openConversationWindow(response.conversation_id, response.conversation_name);
			updateConversationsBox();
		});
	}

	function updateChatBox( conversationId ) {
		currentConversationId = conversationId;

		$.getJSON( "/messages/get_by_conversation/" + conversationId, function( messages ) {
			var chatWindow = $("#chat-conversation-window-" + conversationId);
			var chatBox = chatWindow.children(".chat-conversation-window-message-containter");

			chatBox.html("");
			var foreignParticipants = [];
			/*
			$("#send-button").off();
			$("#send-button").click( function() {
				sendMessage(conversationId);
			});
			$("#chat-input").off();
			$("#chat-input").keyup( function(event) {
				if(event.keyCode == 13) {
					sendMessage(conversationId);
				}
			});
			*/
			/*
			$("#chat-input").focus( function() {
				clearNotifications(conversationId);
			});*/

			// set title
			/*
			$.getJSON( "/conversations/get_participants/" + conversationId, function( users ) {
				$.each( users, function(index, user) {
					if( user.id != <?php // echo  $currentUser['id'] ?> ) {
						foreignParticipants.push(user.username);
					}
				});
				if( foreignParticipants.length > 0 ) {
					$("#chat-box-title").text("Chat with " + foreignParticipants.join(","));
				}
				else {
					$("#chat-box-title").text("Chat");
				}
			});
			*/

			// display messages
			$.each(messages, function (index, message) {
				var areWeSender = message.user_id == <?php echo  $currentUser['id'] ?>;
				var bubbleClass = areWeSender ? "chat-message-bubble-right" : "chat-message-bubble-left";
				var bubble = $("<div/>", {
					"class" : "chat-message-bubble " + bubbleClass
				});
				/*
				if(!areWeSender) { // if not we are sender ! xD
					var avatarDiv = $("<div/>", {
						"class" : "avatar"
					});
					var avatarImg = $("<img/>", {
						"class" : "avatar-small",
						"src" : "/img/avatar1.jpg"
					});
					li.append(avatarDiv);
					avatarDiv.append(avatarImg);
				}
				*/
				/*
				var infoDiv = $("<div/>", {
					"class": "info"
				});
				var nameSpan = $("<span/>", {
					"class": "name",
					"html": "<strong>" + message.user.username + "</strong>"
				});
				var timeSpan = $("<span/>", {
					"class": "time",
					"text":  jQuery.timeago( message.created )
				});
				*/
				/*
				nameSpan.append(timeSpan);
				infoDiv.append(nameSpan);
				bubble.append(infoDiv);
				*/
				var escaped = $("<div/>").text(message.content).html();

				bubble.html( escaped );
				chatBox.append(bubble);
			});

			chatBox.scrollTop( chatBox.prop("scrollHeight") );
		});
	}
	var currentConversationId = null;

	function updateConversationsBox() {
		$.getJSON( "/conversations/list_all", function( response ) {
			var conversations = response.conversations;
			var peopleListId = "chat-people-list";
			var conversationsContainer = $("#" + peopleListId);

			conversationsContainer.html('');

			$.each(conversations, function( index, conversation) {
				var users = [];
				var showNotifyTooltip = false;
				/**
				 * create title
				 **/
				$.each(conversation.withUsers, function(index, user) {
					users.push(user.username);
				} );
				var usernames = users.join(",");

				/**
				 * check if conversation got new messages
				 **/
				$.each(response.notifications, function(index, notification) {
					if(notification.type == <?php echo  Viechbook\Model\Notifications::TYPE_NEW_MESSAGE ?>) {
						var content = $.parseJSON(notification.content);
						console.debug(content);
						if( content.conversation_id == conversation.id ) {
							showNotifyTooltip = true;
						}
					}
				});

				addChatConversation(
					conversation.id,
					peopleListId,
					usernames,
					showNotifyTooltip
				);
			});
		});
	}

	function clearNotifications(conversationId) {
		$.getJSON( "/conversations/clear_notifications/" + conversationId, function( response ) {
			if(response == true) {
				$('#notification-for-conversation-' + conversationId).text('');
			}
		});

		updateConversationsBox()
	}
	/**
	 * add a news element to a box container
	 * @param conversationId
 	 * @param elementId the id of the container
	 * @param title the title of the element
	 * @returns {*|jQuery|HTMLElement} the created element
	 */
	function addChatConversation(conversationId, elementId, title, showNotifyBadge) {
		var li = $("<li/>", {
			"role" : 'presentation'
		});

		li.append("<a href='#' onclick='openConversationWindow(" + conversationId + ",\"" + title + "\")'>" + title + "</a>");

		if(showNotifyBadge){
			li.children().append("<span class='badge'>!</span>");
		}

		var newsContainer = $('#'+elementId);
		newsContainer.append(li);
	}

	function closeConversationWindow(conversationId) {
		var conversationWindow = $("#chat-conversation-window-" + conversationId);
		conversationWindow.hide();
		$('.chat-message-editor-textarea').focus();

		/** notify server */
		$.getJSON('/conversations/close_conversation_window/' + conversationId );
	}

	function sendMessage(conversationId) {
		var chatInput = $("#chat-message-conversation-" + conversationId);
		var content = chatInput.val();
		chatInput.val("");

		$.post("/conversations/add_message/" + conversationId,{
			content: content
		}, function() {
			updateChatBox(conversationId);
		});
	}

	function openConversationWindow(conversationId, title, notifyServer = true) {
		/** first check if the window is not already open */
		var found = false;

		$('.chat-conversation-window').each(function(index, element) {
			element = $(element);

			var id = element.attr('id');
			var foundId = 'chat-conversation-window-' + conversationId;

			if(id == foundId) {
				/** already open, so show and set the focus on the textfield */
				$("#chat-conversation-window-" + conversationId).show();
				$("#chat-message-conversation-" + conversationId).focus();
				found = true;
			}

			/** exit foreach loop */
			return true;
		});

		if(found) {
			/** nothing to to anymore */
			return
		}

		/** create new chat-window */
		var dummy = $('#chat-conversation-window-dummy').clone();

		/** set the values of the dummy correctly */
		dummy.attr('id', 'chat-conversation-window-' + conversationId);

		/** construct the close-button-logic */
		var closeButton = dummy.children('.chat-conversation-window-close-button');

		closeButton.click(function() {
			closeConversationWindow(conversationId);
		});

		/** set the correct id of the textarea, so we can identify the message-content later */
		var newTextAreaId = ("chat-message-conversation-" + conversationId);
		var textarea = dummy.children('.chat-conversation-window-bottom-bar').children('textarea');
		textarea = $(textarea[0]);

		textarea.attr('id', newTextAreaId);

		/** and also the callback to the sendMessage function */
		textarea.keyup( function(event) {
			var charCode = (typeof event.which === "number") ? event.which : event.keyCode;
			/** 13 -> enter key */
			if(charCode == 13) {
				sendMessage(conversationId);
			}
			/** escape - close window */
			else if(charCode == 27){
				closeConversationWindow(conversationId);
			}
		});

		textarea.on('focus', function(){
			clearNotifications(conversationId);
		});

		/** set the conversation-title */
		dummy.children('.chat-conversation-window-headline').html(title);

		/** load messages etc */
		updateChatBox(conversationId);

		/** add it to the chat-window-container */
		var container = $("#chat-window-containter");
		container.append(dummy);

		/** show-time and focus */
		dummy.show();
		$("#chat-message-conversation-" + conversationId).focus();

		/** notify server if necessary */
		if(notifyServer) {
			$.getJSON('/conversations/open_conversation_window/' + conversationId );
		}


	}
</script>

</body>
</html>
